"use client";

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Download, RotateCcw, Share2, CheckCircle } from "lucide-react";

// Simplified component interface
interface ResultDisplayProps {
  state: "idle" | "uploading" | "generating" | "success" | "error";
  originalImage: string | null;
  resultImage: string | null;
  error: string | null;
  onReset: () => void;
}

export function ResultDisplay({
  state,
  originalImage,
  resultImage,
  error,
  onReset,
}: ResultDisplayProps) {
  
  /**
   * Download result image
   */
  const handleDownload = async () => {
    if (!resultImage) return;
    
    try {
      const response = await fetch(resultImage);
      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);
      
      const a = document.createElement("a");
      a.href = url;
      a.download = `buzz-cut-${Date.now()}.png`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      window.URL.revokeObjectURL(url);
    } catch (err) {
      console.error("Download failed:", err);
    }
  };

  /**
   * Share result
   */
  const handleShare = async () => {
    if (navigator.share) {
      try {
        await navigator.share({
          title: "My Buzz Cut Preview",
          text: "Check out my buzz cut preview generated by BuzzCut AI!",
          url: window.location.href,
        });
      } catch (err) {
        console.error("Share failed:", err);
      }
    } else {
      // Fallback: copy to clipboard
      navigator.clipboard.writeText(window.location.href);
      alert("Link copied to clipboard!");
    }
  };

  // Idle state
  if (state === "idle") {
    return (
      <Card className="h-full">
        <CardContent className="p-6 flex items-center justify-center h-64">
          <div className="text-center text-muted-foreground">
            <div className="w-16 h-16 bg-muted rounded-full flex items-center justify-center mx-auto mb-4">
              <CheckCircle className="w-8 h-8" />
            </div>
            <p>Upload an image to get started</p>
          </div>
        </CardContent>
      </Card>
    );
  }

  // Generating state
  if (state === "generating") {
    return (
      <Card className="h-full">
        <CardContent className="p-6 flex items-center justify-center h-64">
          <div className="text-center">
            <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-primary mx-auto mb-4"></div>
            <p className="text-lg font-medium">Generating your buzz cut...</p>
            <p className="text-sm text-muted-foreground mt-2">
              Using Flux AI technology with face preservation
            </p>
            <p className="text-xs text-muted-foreground mt-1">
              This may take 30-60 seconds
            </p>
          </div>
        </CardContent>
      </Card>
    );
  }

  // Error state
  if (state === "error" || error) {
    return (
      <Card className="h-full">
        <CardContent className="p-6 flex items-center justify-center h-64">
          <div className="text-center">
            <div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <RotateCcw className="w-8 h-8 text-red-500" />
            </div>
            <p className="text-lg font-medium text-red-600">Generation Failed</p>
            <p className="text-sm text-muted-foreground mt-2">
              {error || "Something went wrong, please try again"}
            </p>
            <Button
              onClick={onReset}
              variant="outline"
              className="mt-4"
            >
              Try Again
            </Button>
          </div>
        </CardContent>
      </Card>
    );
  }

  // Success state
  if (state === "success" && resultImage && originalImage) {
    return (
      <Card className="h-full">
        <CardHeader>
          <CardTitle className="text-lg flex items-center gap-2">
            <CheckCircle className="w-5 h-5 text-green-500" />
            Generation Complete
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          {/* Image comparison */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <p className="text-sm font-medium mb-2">Original</p>
              <img
                src={originalImage}
                alt="Original"
                className="w-full h-32 object-cover rounded-lg"
              />
            </div>
            <div>
              <p className="text-sm font-medium mb-2">Buzz Cut</p>
              <img
                src={resultImage}
                alt="Buzz Cut Result"
                className="w-full h-32 object-cover rounded-lg"
              />
            </div>
          </div>
          
          {/* Action buttons */}
          <div className="flex gap-2">
            <Button
              onClick={handleDownload}
              className="flex-1"
              size="sm"
            >
              <Download className="w-4 h-4 mr-2" />
              Download
            </Button>
            <Button
              onClick={handleShare}
              variant="outline"
              size="sm"
            >
              <Share2 className="w-4 h-4" />
            </Button>
            <Button
              onClick={onReset}
              variant="outline"
              size="sm"
            >
              <RotateCcw className="w-4 h-4" />
            </Button>
          </div>
          
          {/* Free version notice */}
          <div className="p-3 bg-yellow-50 border border-yellow-200 rounded-lg">
            <p className="text-sm text-yellow-800">
              Free version includes watermark. Upgrade to Pro for 4K downloads without watermark.
            </p>
          </div>
        </CardContent>
      </Card>
    );
  }

  return null;
}